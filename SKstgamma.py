import flavio
import flavio.plots
import matplotlib
import matplotlib.pyplot as plt
matplotlib.rc("savefig", dpi=100)

f = open('plots/results.txt', 'w')
prec = 500

for x in range(0, 1):
    # average = flavio.sm_prediction("BR(B0->K*gamma)")
    # error = flavio.sm_uncertainty("BR(B0->K*gamma)", N=prec)
    # print("BR(B0->K*gamma):           ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("BR(B0->K*gamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$BR(B^0 \to K^* \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/BR_B0_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("S_K*gamma")
    # error = flavio.sm_uncertainty("S_K*gamma", N=prec)
    # print("S_K*gamma:                 ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("S_K*gamma")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$S_{K^* \gamma}$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/S_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("ACP(B0->K*gamma)")
    # error = flavio.sm_uncertainty("ACP(B0->K*gamma)", N=prec)
    # print("ACP(B0->K*gamma):          ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("ACP(B0->K*gamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$A_{CP}(B^0 \to K^* \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/ACP_B0_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("ADeltaGamma(B0->K*gamma)")
    # error = flavio.sm_uncertainty("ADeltaGamma(B0->K*gamma)", N=prec)
    # print("ADeltaGamma(B0->K*gamma):  ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("ADeltaGamma(B0->K*gamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$A_{\Delta \Gamma}(B^0 \to K^* \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/ADeltaGamma_B0_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("BR(B+->K*gamma)")
    # error = flavio.sm_uncertainty("BR(B+->K*gamma)", N=prec)
    # print("BR(B+->K*gamma):           ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("BR(B+->K*gamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$BR(B^+ \to K^* \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/BR_Bp_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("ACP(B+->K*gamma)")
    # error = flavio.sm_uncertainty("ACP(B+->K*gamma)", N=prec)
    # print("ACP(B+->K*gamma):          ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("ACP(B+->K*gamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$A_{CP}(B^+ \to K^* \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/ACP_Bp_K_gamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("BR(Bs->phigamma)")
    # error = flavio.sm_uncertainty("BR(Bs->phigamma)", N=prec)
    # print("BR(Bs->phigamma):          ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("BR(Bs->phigamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$BR(B_s \to \phi \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/BR_Bs_phigamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("S_phigamma")
    # error = flavio.sm_uncertainty("S_phigamma", N=prec)
    # print("S_phigamma:                ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("S_phigamma")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$S_{\phi \gamma}$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/S_phigamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("ACP(Bs->phigamma)")
    # error = flavio.sm_uncertainty("ACP(Bs->phigamma)", N=prec)
    # print("ACP(Bs->phigamma):         ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("ACP(Bs->phigamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$A_{CP}(B_s \to \phi \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/ACP_Bs_phigamma.png')
    # plt.close()
    #
    # average = flavio.sm_prediction("ADeltaGamma(Bs->phigamma)")
    # error = flavio.sm_uncertainty("ADeltaGamma(Bs->phigamma)", N=prec)
    # print("ADeltaGamma(Bs->phigamma): ", average, " +/- ", error, file=f)
    # errors = flavio.sm_error_budget("ADeltaGamma(Bs->phigamma)")
    # flavio.plots.error_budget_pie(errors)
    # plt.title(r'$A_{\Delta \Gamma}(B_s \to \phi \gamma)$ = %.3E $\pm$ %.3E'%(average, error))
    # plt.savefig('plots/ADeltaGamma_Bs_phigamma.png')
    # plt.close()
    #
    # f.close()

    # print(flavio.sm_uncertainty("BR(B0->K*gamma)"))
    print(flavio.sm_prediction("<dBR/dq2>(B0->K*mumu)",1.,1.1))

    # print("BR(B0->K*gamma):           ", flavio.sm_prediction("BR(B0->K*gamma)"))
    # print("S_K*gamma:                 ", flavio.sm_prediction("S_K*gamma"))
    # print("ACP(B0->K*gamma):          ", flavio.sm_prediction("ACP(B0->K*gamma)"))
    # print("ADeltaGamma(B0->K*gamma):  ", flavio.sm_prediction("ADeltaGamma(B0->K*gamma)"))
    # print("BR(B+->K*gamma):           ", flavio.sm_prediction("BR(B+->K*gamma)"))
    # print("ACP(B+->K*gamma):          ", flavio.sm_prediction("ACP(B+->K*gamma)"))
    # print("BR(Bs->phigamma):          ", flavio.sm_prediction("BR(Bs->phigamma)"))
    # print("S_phigamma:                ", flavio.sm_prediction("S_phigamma"))
    # print("ACP(Bs->phigamma):         ", flavio.sm_prediction("ACP(Bs->phigamma)"))
    # print("ADeltaGamma(Bs->phigamma): ", flavio.sm_prediction("ADeltaGamma(Bs->phigamma)"))
